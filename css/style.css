/* mobile first approach */
/* you can notice at the badges styling, usually the diferrent is 
at the font size and component margin/padding */
html {
    font-size: 62.5%;
}

/* define the color onto variable */
/* color
-primary
-secondary
-accent
*/
:root {
    --color-primary: #2584ff;
    --color-secondary: #00d9ff;
    --color-accent: #ff3400;
    --color-headings: #1b0760;
    --color-body: #918ca4;
    --color-border: #ccc;
    --border-radius: 30px;

}

*,
*::after,
*::before {
    box-sizing: border-box;
}

/* typography (font and size)*/
body {
    font-family: Inter, Helvetica, sans-serif;
    color: var(--color-body);
    font-size: 2.4rem;
    line-height: 1.5;
}

h1,h2,h3 {
    color: var(--color-headings);
    margin-bottom: 1rem;
}

h1 {
    font-size: 7rem;
}

h2 {
    font-size: 4rem;
}

h3 {
    font-size: 3rem;
}

p {
    margin-top: 0;
}

@media screen and (min-width: 1024px) {
    body {
        font-size: 1.8rem;
    }

    h1 {
    font-size: 8rem;
    }

    h2 {
        font-size: 4rem;
    }

    h3 {
        font-size: 2.4rem;
    }
}

/* links */
a {
    text-decoration: none;
}

.link-arrow {
    color: var(--color-accent);
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
}

.link-arrow::after{
    content: "-->";
    margin-left: 5px;
    transition: margin 0.15s;
}

.link-arrow:hover::after{
    margin-left: 10px;
}

@media screen and (min-width: 1024px) {
    .link-arrow{
        font-size: 1.5rem;
    }
}

/* Badges */
/* applying the 2nd object oriented CSS rule where we should separate structure and skin styling */
/* define 2 different class 
basic strucure: padding, font size
skin: color sizes
*/

.badge {
    border-radius: 20px;
    font-size: 2rem;
    font-weight: 600;
    padding: 0.5rem 2rem;
    white-space: nowrap;
    /* white space: prevent badge for wraping to second line, used for limited space  */
    /* structure ex */
}

.badge--primary {
    background: var(--color-primary);
    color: white;
}

.badge--secondary {
    background: var(--color-secondary);
    color: white;
}

/* badge for bigger screen */
.badge--small {
    font-size: 1.6rem;
}

/* so we actually style all the component first,
for example, for the badges. in the markup there is 3 class, 
badge, rimary style, secondary style this depend on the design too
but we can just use same markup dan change the style so it will be more covenient */

/* in mobile version,the bosy text is larger so it's comfortable to see on small screen
start styling from mobile version

set the markup copy in the component folder so we not forgot if we have so much component
make all the markup in all class we made
*/

/* badges for larger screen */

@media screen and (min-width:1024px) {
    .badge {
        font-size: 1.5rem;
        /* note the dekstop version using 1.5rem and mobile device use 2rem */  
    }
    .badge--small{
        font-size: 1.2rem;
    }
}

/* making list */
/* 
shorthand making list automatic
ul.list>li{Item $}*3
 */
 /* the $ sign is equal n, so it will automaticall */
/* example::afterul.list>li{annan $}*4
in result: 
    <ul class="list">
      <li>annan 1</li>
      <li>annan 2</li>
      <li>annan 3</li>
      <li>annan 4</li>
    </
*/

/* makin the inline list */
.list {
    list-style: none;
    padding-left: 0;
    /* browser add padding by default */
    color: var(--color-headings);
}

.list--inline .list__item{
    /* Block, Element, Modifier(BEM) double underscore: separate block from it's element  (internal part o the list) */
    display: inline-block;
    margin-right: 2rem;
   
}
/* making the tick icon remember if it not show it because we set the 
padding left 0 for the inline list */
.list--tick {
    list-style-image: url(/images/tick.svg);
    padding-left: 3rem;
}

/* notice the tick and the ist__item at the design is have more space
we can add more style in particullar skin, targetting the item */

.list--tick .list__item {
    padding-left: 0.5rem;
    margin-bottom: 1rem;
}

/* for larger screen, the diferrent is the tick and the item space is smaller */

@media screen and (min-width:1024px) {
    .list--tick .list__item {
        padding-left: 0;
    }
}


/* Icons */
/* combine all th svg into the sprite so we can reduce the number of the HTTP request to the server
use svg sprite generator and download the sprite then copy to the markup
*/

.icon {
    width: 40px;
    height: 40px;
}

.icon--primary {
    fill: var(--color-primary);
}

/* remembert this properties to set icon to the center
using span(inline element) display inline flex
*/
.icon-container {
    background: #f3f9fa;
    width: 64px;
    height: 64px;
    border-radius: 100%;
    display: inline-flex;
    justify-content: center;
    align-items: center;
}

/* object oriented ccs 
we can separatinf structure from the skin and make diferrent skin and combine the diferrent skin to achieve diferrent result 
*/

/* Button */
.btn {
    border-radius: 40px;
    border: 0;
    cursor: pointer;
    font-size: 1.8rem;
    font-weight: 600;
    padding: 2rem 3rem;
    text-transform: uppercase;
    white-space: no-wrap;
    text-align: center;
    margin: 1rem 0;
    
}

.btn--primary {
    background: var(--color-primary);
    color: #fff;
}

.btn--primary:hover {
    background: #3a8ffd;
    
}

.btn--secondary {
    background: var(--color-secondary);
    color: #fff;
}

.btn--secondary:hover {
    background: #00c8eb;
}
 
.btn--accent {
    background: var(--color-accent);
    color: #fff;
}

.btn--accent:hover {
    background: #ec3000;
}

.btn--block {
    width: 100%;
    display: inline-block;
}

.btn--outline {
    background: #fff;
    color: var(--color-headings);
    border: 2px solid var(--color-headings);
}

.btn--outline:hover {
    background: var(--color-headings);
    color: #fff;
}

@media screen and (min-width:1024px) {
    .btn {
        font-size: 1.5rem;
    }
}

/* Inputs */
.input {
    padding: 1.5rem 3.5rem;
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    outline: 0;
    color: var(--color-headings);
}

::placeholder {
    color: #cdcbd7;
    font-size: 2rem;
}

/* input groups */
.input-group {
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    display: flex;

}

.input-group .input {
    border: 0;
    flex-grow: 1;
    padding: 1.5rem 1rem;
}

.input-group .btn {
    margin: 4px;
}

@media screen and(min-width:1024px) {
    .input {
        font-size: 1.5rem;
        border-radius: var(--border-radius);
    }
    
}

